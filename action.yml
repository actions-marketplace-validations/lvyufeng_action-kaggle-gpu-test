name: "Kaggle GPU Test"
author: "namiyousef"
description: "Automatically test integration/gpu tests against Kaggle notebook with GPU runtime"
inputs:
  git_access_token:
    description: "GitHub secret token with read permissions"
    required: true
  kaggle_api_key:
    description: "Kaggle API key for pushing tests"
    required: true
  repository_name:
    description: "Repository owner and name, owner/name"
    required: true
  test_folder:
     description: "Folder to run pytest on"
     required: true
     default: "integration/"
outputs:
  automatic_releases_tag:
    description: "The release tag this action just processed"
  upload_url:
    description: "The URL for uploading additional assets to the release"
runs:
  using: "composite"
  steps:
  #- name: authenticate-kaggle-cli
  #  shell: bash
  #  run:  |
  #    echo $REPO_URL
  #    echo $REPO_NAME
    #  echo "Hello World"
    # echo $KAGGLE_API_KEY
    # echo $REPO_URL
    # echo $REPO_NAME
    # echo $TEST_FOLDER
  - name: test clone repo
    shell: bash
    env:
      REPO_NAME: ${{ inputs.repository_name }}
      GIT_ACCESS_TOKEN: ${{ inputs.git_access_token }}
      KAGGLE_API_KEY: ${{ inputs.kaggle_api_key }}
      TEST_FOLDER: ${{ inputs.test_folder }}
    run: |
      
      echo ${test_folder}
      echo ${repository_name}
      git clone https://${GIT_ACCESS_TOKEN}@github.com/${REPO_NAME}.git
      export REPO="$(cut -d'/' -f2 <<<"$REPO_NAME")"
      cd $REPO
    #ls
      
    # authenticate kaggle cli
  #send-job:
    # use kaggle cli to send the tests
    # sends a job to Kaggle. I.e. this should create the files, send them
  
  #check-status:
    # needs to be a while loop, keeps checking until status is either success or error. Depending on this should output error
branding:
  icon: activity
  color: green
